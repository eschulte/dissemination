#!/bin/bash
#
# Usage: dis-pack [OPTION]... [FILE]
# Read a message from FILE or standard input and pack it.
#  TODO: add support for encryption targeting a group
#  TODO: add support for more key value pairs than just content
#
#  -s, --sign                  sign message
#  -S, --signatory [USER-ID]   use USER-ID as signer, implies -s
#  -e, --encrypt [USER-ID]     encrypt for USER-ID (multiples okay)
#
. $(dirname $0)/dis-common

## Parse command line arguments
SIGN=""; SIGNATORY=""; RECIPIENTS=();
options  -o sS:e: -l sign,signatory:,encrypt: -- "$@"
while [ $# -gt 0 ];do
    case $1 in
        -s|--sign) SIGN="yes";;
        -S|--signatory)
            if [ -z "$SIGNATORY" ];then
                SIGN="yes";
                SIGNATORY="$2"; shift;
            else
                error "can only specify 1 signatory";
            fi;;
        -e|--encrypt) RECIPIENTS+="$2"; shift;;
        (--) shift; break;;
        (-*) error "$0: error -- unrecognized option $1";;
        (*)  break;;
    esac
    shift
done
CONTENT=$(if [ -z "$1" ];then cat -;else cat "$1";fi)

JSON=$(
    ## Build the output
    echo -n "{"

    # Hash
    HASH=$(sha1 $CONTENT)
    echo -n " \"keys\":[\"content\"],"
    echo -n " \"hash\":\"$HASH\","

    # Sign
    if [ ! -z "$SIGN" ];then

        # Signatory
        SIGNATORY="$(gpg_name "$SIGNATORY")"
        echo -n " \"signatory\":\"$SIGNATORY\","

        # Signature
        echo -n " \"signature\":$(sign "$SIGNATORY" "$CONTENT"|quote),"

    fi
    
    echo -n " \"content\":$(echo "$CONTENT"|quote)"
    
    echo    " }")

# Encrypted for recipients
if [ -z "$RECIPIENTS" ];then
    echo "$JSON"
else
    RECIP_STR="${RECIPIENTS[0]}";
    # TODO: handle multiple recipients
    echo -n "{\"recipients\":[$RECIP_STR], "
    echo -n "\"encrypted\":$(quote "$(encrypt "$RECIPIENTS" "$JSON")")}"
fi
